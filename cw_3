// ConsoleApplication12.cpp : Ten plik zawiera funkcję „main”. W nim rozpoczyna się i kończy wykonywanie programu.
//

#include "pch.h"
#include <iostream>
#include <vector>

using namespace std;

void wypisz(int w)
{
	cout << w << endl;
}

void wypisz(vector<int>tab)
{
	for (int i = 0; i < tab.size(); i++)
	{
		cout << tab[i] << ", ";
	}
}

bool czy_nalezy(vector<int>tab, int element)
{
	for (int i = 0; i < tab.size(); i++)
	{
		if (tab[i] == element)
		{
			return true;
		}
	}
	return false;
}

bool czy_zawiera(vector<int>tab, vector<int>podzbior)
{
	for (int i = 0; i < podzbior.size(); i++)
	{
		if (!czy_nalezy(tab, podzbior[i]))
		{
			return false;
		}
	}
	return true;
}

int min(vector<int>tab)
{
	int wynik = tab[0];
	for (int i = 0; i < tab.size(); i++)
	{
		if (wynik > tab[i])
		{
			wynik = tab[i];
		}
	}
	return wynik;
}

vector<int> unikalnosc(vector<int>tab)
{
	vector<int>wynik;
	for (int i = 0; i < tab.size(); i++)
	{
		if (!czy_nalezy(wynik, tab[i]))
		{
			wynik.push_back(tab[i]);
		}
	}
	return wynik;
}

vector<vector<int>>	czestosc(vector<int>tab)
{
	vector<vector<int>>wynik;
	vector<int>u = unikalnosc(tab);
	vector<int>c;
	for (int i = 0; i < u.size(); i++)
	{
		int licznik = 0;
		for (int j = 0;j < tab.size(); j++)
		{
			if (u[i] == tab[j])
			{
				licznik ++;
			}
		}
		c.push_back(licznik);
	}
	wynik.push_back(u);
	wynik.push_back(c);
	return wynik;
}

int main()
{
	std::cout << "Hello World!\n";
	int a = 6;
	wypisz(a);
	vector<int>tab;
	tab = { 1, 3, 5,5,2,6,1,8 };
	vector<int>podzbior;
	podzbior = { 1,3 };
	bool wynik1 = czy_nalezy(tab, 1);
	if (wynik1)
	{
		cout << "TAK" << endl;
	}
	else
	{
		cout << "NIE" << endl;
	}
	bool wynik2 = czy_zawiera(tab, podzbior);
	if (wynik2)
	{
		cout << "TAK" << endl;
	}
	else
	{
		cout << "NIE" << endl;
	}
	cout << min(tab) << endl;
	wypisz(unikalnosc(tab));
}

// Uruchomienie programu: Ctrl + F5 lub menu Debugowanie > Uruchom bez debugowania
// Debugowanie programu: F5 lub menu Debugowanie > Rozpocznij debugowanie

// Porady dotyczące rozpoczynania pracy:
//   1. Użyj okna Eksploratora rozwiązań, aby dodać pliki i zarządzać nimi
//   2. Użyj okna programu Team Explorer, aby nawiązać połączenie z kontrolą źródła
//   3. Użyj okna Dane wyjściowe, aby sprawdzić dane wyjściowe kompilacji i inne komunikaty
//   4. Użyj okna Lista błędów, aby zobaczyć błędy
//   5. Wybierz pozycję Projekt > Dodaj nowy element, aby utworzyć nowe pliki kodu, lub wybierz pozycję Projekt > Dodaj istniejący element, aby dodać istniejące pliku kodu do projektu
//   6. Aby w przyszłości ponownie otworzyć ten projekt, przejdź do pozycji Plik > Otwórz > Projekt i wybierz plik sln

