// wejsciowka16.cpp : Ten plik zawiera funkcję „main”. W nim rozpoczyna się i kończy wykonywanie programu.
//

#include "pch.h"
#include <iostream>
#include <vector>
#include<map>
#include<time.h>
#include<cstdlib>
using namespace std;

void wypisz(int w)
{
	cout << w << endl;
}
void wypisz(vector<int>tab)
{
	for (int i = 0; i < tab.size(); i++)
	{
		cout << tab[i] << ", ";
	}
}
void wypisz(map<int, int>m)
{
	for (auto item : m)
	{
		cout << item.first << "->" << item.second << endl;
	}
}

bool czyNalezy(vector<int>tab, int element)
{
	for (int i = 0; i < tab.size(); i++)
	{
		if (tab[i] == element)
		{
			return true;
		}
	}
	return false;
}
bool czyZawiera(vector<int>tab, vector<int>tab1)
{
	for (int i = 0; i < tab1.size(); i++)
	{
		if (!czyNalezy(tab, tab1[i]))
		{
			return false;
		}
	}
	return true;
}
vector<int> unikalnosc(vector<int>tab)
{
	vector<int>wynik;
	for (int i = 0; i < tab.size(); i++)
	{
		if (!czyNalezy(wynik, tab[1]))
		{
			wynik.push_back(tab[i]);
		}
	}
	return wynik;
}

bool czyNalezyKlucz(map<int, int>m, int element)
{
	for (auto item : m)
	{
		if (item.first == element)
		{
			return true;
		}
	}
	return false;
}
map<int, int> czestosc(vector<int>tab)
{
	map<int, int>wynik;
	for (int i = 0; i < tab.size(); i++)
	{
		if (!czyNalezyKlucz(wynik, tab[i]))
		{
			wynik.insert({ tab[i],1 });
		}
		else
		{
			wynik[tab[i]]++;
		}
	}
	return wynik;
}
int min(vector<int>tab)
{
	int wynik = tab[0];
	for (int i = 0; i < tab.size(); i++)
	{
		if (wynik > tab[i])
		{
			wynik = tab[i];
		}
	}
	return wynik;
}
vector<int> podzielnosc(vector<int>tab, int dzielnik, int reszta=0)
{
	vector<int>wynik;
	for (int i = 0; i < tab.size(); i++)
	{
		if (tab[i] % dzielnik == reszta)
		{
			wynik.push_back(tab[i]);
		}

	}
	return wynik;
}
vector<int> generuj(int ilosc, int max, int min)
{
	vector<int>wynik;
	for (int i = 0; i < ilosc; i++)
	{
		wynik.push_back(rand() % (max - min) + min);
	}
	return wynik;
}

int main()
{
	//palindrom, ale na (string)
	//wygeneruj wektor o dlugosci podanej przez uzytkownika wybierz z niego liczby podzielne przez 7 i wypisz
	//cout << "Podaj dlugosc wektora";
	//int m;
	//cin >>m;
	//wypisz(podzielnosc(generuj(m, 50, 0), 7));
	//int n;
	//cin >> n;
	//for (int i = 1; i <= n; i++)
	//{
		//for (int j = 0; j < i*2-1; j++)
		//{
		//	cout << "*";
		//}	
		//cout << endl;
	//}
	int n;
	cin >> n;
	for (int i = 1; i <= n; i++)
	{
		for (int j = 1; j <= n - i; j++)
		{
			cout << " ";
		}
		for (int j = 1; j <= i * 2 - 1; j++)
		{
			cout << "*";
		}
		cout << endl;
	}
	vector<int>tab;
	tab = { 1,2,3,4,5,6,7,1,2,3 };
	vector<int>tab1;
	tab1 = { 1,2,3 };
    std::cout << "Hello World!\n"; 
}

// Uruchomienie programu: Ctrl + F5 lub menu Debugowanie > Uruchom bez debugowania
// Debugowanie programu: F5 lub menu Debugowanie > Rozpocznij debugowanie

// Porady dotyczące rozpoczynania pracy:
//   1. Użyj okna Eksploratora rozwiązań, aby dodać pliki i zarządzać nimi
//   2. Użyj okna programu Team Explorer, aby nawiązać połączenie z kontrolą źródła
//   3. Użyj okna Dane wyjściowe, aby sprawdzić dane wyjściowe kompilacji i inne komunikaty
//   4. Użyj okna Lista błędów, aby zobaczyć błędy
//   5. Wybierz pozycję Projekt > Dodaj nowy element, aby utworzyć nowe pliki kodu, lub wybierz pozycję Projekt > Dodaj istniejący element, aby dodać istniejące pliku kodu do projektu
//   6. Aby w przyszłości ponownie otworzyć ten projekt, przejdź do pozycji Plik > Otwórz > Projekt i wybierz plik sln
